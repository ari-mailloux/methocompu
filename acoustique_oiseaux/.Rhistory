setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux/acoustique_oiseaux")
# Obtenez une liste des fichiers CSV dans le repertoire
files <- list.files(pattern=".csv")
# Creez une liste pour stocker les dataframes
dataframes <- list()
# Importez chaque fichier CSV dans RStudio et stockez-le dans la liste des dataframes
for(file in files) {
# Cr?ez un nom de dataframe en supprimant l'extension du fichier
df_name <- sub("\\.csv$", "", file)
# Importez le fichier CSV en tant que dataframe
data <- read.csv(file)
# Stockez le dataframe dans la liste des dataframes
dataframes[[df_name]] <- data
}
# Acc?dez ? chaque dataframe dans la liste des dataframes en utilisant son nom
# par exemple, dataframes[['nom_dataframe']]
# Combinez tous les dataframes en un seul en utilisant rbind
donnees_oiseau <- do.call(rbind, dataframes)
##convertir date
donnees_oiseau$date_obs <- as.Date(donnees_oiseau$date_obs, format = "%d/%m/%Y")
verifier_et_corriger_position_virgule <- function(donnees_oiseau) {
# Déterminer la nouvelle position de la virgule si nécessaire
for (i in 1:nrow(positions_virgules)) {
if (positions_virgules[[i]] != 4) {
if (positions_virgules[[i]] != nouvelle_position) {
donnees_oiseau[[lat]][i] <- substr(donnees_oiseau[[lat]][i], 4, nouvelle_position - 4)
paste(donnees_oiseau[[lat]][i], ".", substr(donnees_oiseau[[lat]][i], nouvelle_position), sep = "")
}
}
}
return(positions_virgules)
}
head(donnees_oiseau)
creer_dataframe(c("id",donnees_oiseau[,"variable"]))
creer_dataframe <- function(nom_colonnes, valeurs) {
# Créer un nouveau dataframe
nouveau_dataframe <- data.frame(matrix(nrow = length(valeurs[[1]]), ncol = length(nom_colonnes)))
# Nommer les colonnes
colnames(nouveau_dataframe) <- nom_colonnes
# Remplir le dataframe avec les valeurs spécifiées
for (i in 1:length(nom_colonnes)) {
nouveau_dataframe[[i]] <- valeurs[[i]]
}
return(nouveau_dataframe)
}
creer_dataframe(c("id",donnees_oiseau[,"variable"]))
creer_dataframe <- function(nom_colonnes, valeurs) {
# Créer un nouveau dataframe
nouveau_dataframe <- data.frame(matrix(nrow = length(valeurs[[1]]), ncol = length(nom_colonnes)))
# Nommer les colonnes
colnames(nouveau_dataframe) <- nom_colonnes
# Remplir le dataframe avec les valeurs spécifiées
for (i in 1:length(nom_colonnes)) {
nouveau_dataframe[[i]] <- valeurs[[i]]
}
return(nouveau_dataframe)
}
creer_dataframe(c("id","variable"]), c(,donnees_oiseau[,"variable"])
creer_dataframe <- function(nom_colonnes, valeurs) {
# Créer un nouveau dataframe
nouveau_dataframe <- data.frame(matrix(nrow = length(valeurs[[1]]), ncol = length(nom_colonnes)))
# Nommer les colonnes
colnames(nouveau_dataframe) <- nom_colonnes
# Remplir le dataframe avec les valeurs spécifiées
for (i in 1:length(nom_colonnes)) {
nouveau_dataframe[[i]] <- valeurs[[i]]
}
return(nouveau_dataframe)
}
creer_dataframe(c("id","variable"), c(,donnees_oiseau[,"variable"])
View(dataframes)
View(dataframes)
View(dataframes)
creer_dataframe(c("id","variable"), c(1:length(donnees_oiseau[,1]),donnees_oiseau[,"variable"])
creer_dataframe(c("id","variable"), c(1:length(donnees_oiseau[,1]),donnees_oiseau[,"variable"])
creer_dataframe(c("id","variable"),c(1:length(donnees_oiseau[,1]),donnees_oiseau[,"variable"]))
df <- creer_dataframe(c("id","variable"),c(1:length(donnees_oiseau[,1]),donnees_oiseau[,"variable"]))
View(donnees_oiseau)
View(donnees_oiseau)
nettoyge <- function(nom_data) {
#remplacer virgule par point
gsub(",",".",nom_data)
}
nettoyge(donnees_oiseau)
nettoyge <- function(nom_data) {
#remplacer virgule par point
gsub(",",".",nom_data)
}
essaye<-nettoyge(donnees_oiseau)
head(essaye)
nettoyge <- function(nom_data) {
#remplacer virgule par point
nom_data<- gsub(",",".",nom_data)
return(nom_data)
}
essaye<-nettoyge(donnees_oiseau)
nettoyage <- function(nom_data) {
#remplacer virgule par point
nom_data<- replace(",",nom_data,".")
}
nettoyage(donnees_oiseau)
nettoyage <- function(nom_data) {
#remplace e
nom_data<- gsub("é","e",nom_data)
}
nettoyage(donnees_oiseau)
View(donnees_oiseau)
nettoyage <- function(nom_data) {
#remplace e
nom_data<- gsub("é","e",nom_data)
return(nom_data)
}
nettoyage(donnees_oiseau)
View(donnees_oiseau)
View(donnees_oiseau)
nettoyage <- function(nom_data) {
#remplace e
nom_data<- gsub("Ã©","e",nom_data)
return(nom_data)
}
nettoyage(donnees_oiseau)
View(donnees_oiseau)
View(donnees_oiseau)
View(donnees_oiseau)
var1 <- c("é")
gsub("é","e",var1)
nettoyage <- function(nom_data) {
for i in 1:nrow(nom_data) {
nettoyage(donnees_oiseau)
nettoyage <- function(nom_data) {
for i in 1:nrow(nom_data) {
nettoyage <- function(nom_data) {
for i in 1:nrow(nom_data) {
nettoyage <- function(nom_data) {
for (i in 1:nrow(nom_data)) {
for (j in 1:ncol(nom_data)){
#remplace e
nom_data[i,j]<- sub("é","e",nom_data[i,j])
nom_data[i,j]<- sub("Ã©","e",nom_data[i,j])
}
}
return(nom_data)
}
nettoyage(donnees_oiseau)
nettoyage <- function(nom_data) {
for (i in 1:nrow(nom_data)) {
for (j in 1:ncol(nom_data)){
#remplace e
nom_data[i,j]<- gsub("é","e",nom_data[i,j])
nom_data[i,j]<- gsub("Ã©","e",nom_data[i,j])
nom_data[i,j]<- gsub("ê","e",nom_data[i,j])
nom_data[i,j]<- gsub("Ãª","e",nom_data[i,j])
nom_data[i,j]<- gsub("è","e",nom_data[i,j])
nom_data[i,j]<- gsub("Ã¨","e",nom_data[i,j])
#remplace a
nom_data[i,j]<- gsub("à","a",nom_data[i,j])
nom_data[i,j]<- gsub("Ã","a",nom_data[i,j])
}
}
return(nom_data)
}
nettoyage(donnees_oiseau)
Combine_csv<-function(){
files <- list.files(pattern=".csv")
dataframes <- list()
for(file in files) {
df_name <- sub("\\.csv$", "", file)
data <- read.csv(file,encoding="UTF-8")
dataframes[[df_name]] <- data
}
combined_df <- do.call(rbind, dataframes)
return(combined_df)
}
Combine_csv()
?return
Combine_csv<-function(){
files <- list.files(pattern=".csv")
dataframes <- list()
for(file in files) {
df_name <- sub("\\.csv$", "", file)
data <- read.csv(file,encoding="UTF-8")
dataframes[[df_name]] <- data
}
combined_df <- do.call(rbind, dataframes)
}
Combine_csv()
Combine_csv()
source("C:/Users/alex4/Desktop/fonction_combiner.R", echo=TRUE)
df_main <- Combine_csv()
Combine_csv<-function(){
files <- list.files(pattern=".csv")
dataframes <- list()
for(file in files) {
df_name <- sub("\\.csv$", "", file)
data <- read.csv(file,encoding="UTF-8")
dataframes[[df_name]] <- data
}
combined_df <- do.call(rbind, dataframes)
return(combined_df)
}
donnee_oiseau <- Combine_csv()
setwd("C:/Users/alex4/Desktop")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
View(Combine_csv)
View(Combine_csv)
setwd("C:/Users/alex4/Desktop/Prog")
setwd("C:/Users/alex4/Desktop/Prog")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux/acoustique_oiseaux")
source("fonction_combiner.r")
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux/acoustique_oiseaux")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
Source("fonction_date.r")
source("fonction_date.r")
source("fonction_date.r")
donnee_oiseau <- convertir_date(donnee_oiseau, "date_obs")
resultat_verification <- verifier_limites_latitude(donnee_oiseau, "lat")
verifier_limites_latitude <- function(df, colonne_latitude) {
latitudes <- df[[colonne_latitude]]
limites <- all(latitudes >= 45 & latitudes <= 63)
return(limites)
}
source("fonction_lat.r")
resultat_verification <- verifier_limites_latitude(donnee_oiseau, "lat")
source("fonction_na.r")
donnee_oiseau <- remplacer_NULL_par_NA(donnee_oiseau)
source("fonction_na.r")
donnee_oiseau <- remplacer_NULL_par_NA(donnee_oiseau)
source("fonction_na.r")
donnee_oiseau <- remplacer_NULL_par_NA(donnee_oiseau)
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux/acoustique_oiseaux")
#Combiner les fichiers csv et extraire les données
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
#Nettotaage des données
source("fonction_date.r")
donnee_oiseau <- convertir_date(donnee_oiseau, "date_obs")
source("fonction_lat.r")
resultat_verification <- verifier_limites_latitude(donnee_oiseau, "lat")
source("fonction_na.r")
donnee_oiseau <- remplacer_NULL_par_NA(donnee_oiseau)
View(donnee_oiseau)
setwd("C:/Users/alex4/Desktop/Prog/acoustique_oiseaux/acoustique_oiseaux")
#Combiner les fichiers csv et extraire les données
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
#Nettotaage des données
source("fonction_na.r")
donnee_oiseau <- remplacer_NULL_par_NA(donnee_oiseau)
source("fonction_date.r")
donnee_oiseau <- convertir_date(donnee_oiseau, "date_obs")
source("fonction_lat.r")
resultat_verification <- verifier_limites_latitude(donnee_oiseau, "lat")
View(donnee_oiseau)
View(donnee_oiseau)
load("C:/Users/flore/OneDrive/Documents/Université/Session 5/Méthode compu/BIO500-Oiseaux-Cornellier_Chevrette_Mimeault_Morin-Beaumier/.RData")
setwd("C:/Users/flore/OneDrive/Documents/Université/Session 5/Méthode compu/BIO500-Oiseaux-Cornellier_Chevrette_Mimeault_Morin-Beaumier")
Combine_csv<-function(){
files <- list.files(pattern=".csv")
dataframes <- list()
for(file in files) {
df_name <- sub("\\.csv$", "", file)
data <- read.csv(file,encoding="UTF-8")
dataframes[[df_name]] <- data
}
combined_df <- do.call(rbind, dataframes)
return(combined_df)
}
View(Combine_csv)
setwd("C:/Users/flore/OneDrive/Documents/Université/Session 5/Méthode compu/acoustique_oiseaux")
Combine_csv<-function(){
files <- list.files(pattern=".csv")
dataframes <- list()
for(file in files) {
df_name <- sub("\\.csv$", "", file)
data <- read.csv(file,encoding="UTF-8")
dataframes[[df_name]] <- data
}
combined_df <- do.call(rbind, dataframes)
return(combined_df)
}
View(Combine_csv)
convertir_date <- function(df, colonne_date) {
df[[colonne_date]] <- as.Date(df[[colonne_date]], format = "%d/%m/%Y")
return(df)
}
View(convertir_date)
verifier_limites_latitude <- function(df, colonne_latitude) {
latitudes <- df[[colonne_latitude]]
limites <- all(latitudes >= 45 & latitudes <= 63)
return(limites)
}
View(convertir_date)
source("fonction_combiner.r")
setwd("C:/Users/flore/OneDrive/Documents/Université/Session 5/Méthode compu/acoustique_oiseaux")
source("fonction_combiner.r")
donnee_oiseau <- Combine_csv()
